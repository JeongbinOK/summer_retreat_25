<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>관리자 대시보드 - 2025 말씀교회 여름수련회</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&family=Noto+Serif+KR:wght@400;500;600&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Noto Sans KR', sans-serif; }
        .navbar-brand { font-weight: bold; }
        .balance-badge { font-size: 1.1em; }
        .dashboard-title { 
            font-family: 'Noto Serif KR', serif; 
            color: #2c3e50; 
            font-weight: 600;
        }
        .card-title { font-weight: 600; }
        .retreat-info {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
        }
    </style>
</head>
<body class="bg-light">
    <%- include('../partials/navbar', { user: user }) %>

    <main class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <!-- Retreat Info Header -->
                <div class="retreat-info text-center">
                    <h1 class="mb-2" style="font-family: 'Noto Serif KR', serif; font-weight: 600;">
                        🎯 관리자 대시보드
                    </h1>
                    <p class="mb-2" style="font-size: 1.1rem;">
                        2025 말씀교회 여름수련회 관리 시스템
                    </p>
                    <small style="opacity: 0.9;">
                        📅 2025.07.31 - 08.02 | 골로새서 3장 16절
                    </small>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">👥 사용자 관리</h5>
                                <p class="card-text">참가자 계정 생성 및 관리</p>
                                <a href="/admin/users" class="btn btn-primary">사용자 관리</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">⭐ 팀 관리</h5>
                                <p class="card-text">팀 구성 및 리더 지정</p>
                                <a href="/admin/teams" class="btn btn-info">팀 관리</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">💰 머니코드</h5>
                                <p class="card-text">가상화폐 생성 및 배포</p>
                                <a href="/admin/money-codes" class="btn btn-success">머니코드</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">🛍️ 상점 관리</h5>
                                <p class="card-text">상품 및 서비스 관리</p>
                                <a href="/admin/products" class="btn btn-primary">상점 관리</a>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="row mt-4">
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">🏆 팀 순위</h5>
                                <p class="card-text">팀별 기부 통계 확인</p>
                                <a href="/admin/rankings" class="btn btn-info">순위 보기</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">📋 주문 확인</h5>
                                <p class="card-text">구매 내역 검토 및 확인</p>
                                <a href="/admin/orders" class="btn btn-warning">주문 보기</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center">
                            <div class="card-body">
                                <h5 class="card-title">🏦 상점 미리보기</h5>
                                <p class="card-text">참가자 관점에서 상점 확인</p>
                                <a href="/store" class="btn btn-outline-primary">상점 보기</a>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center border-warning">
                            <div class="card-body">
                                <h5 class="card-title text-warning">🔑 관리자 비밀번호</h5>
                                <p class="card-text">관리자 비밀번호 변경</p>
                                <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#changePasswordModal">비밀번호 변경</button>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-3">
                        <div class="card text-center border-danger">
                            <div class="card-body">
                                <h5 class="card-title text-danger">🔄 데이터베이스 초기화</h5>
                                <p class="card-text">테스트용 데이터베이스 초기화</p>
                                <button class="btn btn-danger" onclick="confirmReset()">초기화</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Alert container for reset feedback -->
                <div id="reset-alert" class="mt-3"></div>
            </div>
        </div>
        
        <!-- Change Password Modal -->
        <div class="modal fade" id="changePasswordModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Change Admin Password</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <div id="password-alert"></div>
                        <form id="changePasswordForm">
                            <div class="mb-3">
                                <label for="currentPassword" class="form-label">Current Password</label>
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                            </div>
                            <div class="mb-3">
                                <label for="newPassword" class="form-label">New Password</label>
                                <input type="password" class="form-control" id="newPassword" name="newPassword" minlength="6" required>
                                <small class="text-muted">At least 6 characters</small>
                            </div>
                            <div class="mb-3">
                                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-warning" onclick="changePassword()">Change Password</button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        async function logout() {
            try {
                const response = await fetch('/auth/logout', { method: 'POST' });
                if (response.ok) {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Logout error:', error);
            }
        }

        function confirmReset() {
            const confirmed = confirm(
                'WARNING: This will reset the database to initial values!\n\n' +
                'This will:\n' +
                '• Delete all users except admin\n' +
                '• Clear all transactions, orders, and team inventory\n' +
                '• Reset product stock to initial values\n' +
                '• Remove all team leaders\n' +
                '• Delete all money codes\n\n' +
                'This action cannot be undone. Are you sure?'
            );
            
            if (confirmed) {
                resetDatabase();
            }
        }

        async function resetDatabase() {
            try {
                showResetAlert('Resetting database...', 'info');
                
                const response = await fetch('/admin/reset-database', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showResetAlert('Database reset successfully! All data has been restored to initial values.', 'success');
                } else {
                    showResetAlert('Error resetting database: ' + (result.error || 'Unknown error'), 'danger');
                }
            } catch (error) {
                showResetAlert('Network error during database reset.', 'danger');
                console.error('Reset error:', error);
            }
        }

        function showResetAlert(message, type) {
            const alertContainer = document.getElementById('reset-alert');
            alertContainer.innerHTML = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
        }

        async function changePassword() {
            const form = document.getElementById('changePasswordForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);
            
            // Validate passwords match
            if (data.newPassword !== data.confirmPassword) {
                showPasswordAlert('New passwords do not match!', 'danger');
                return;
            }
            
            if (data.newPassword.length < 6) {
                showPasswordAlert('New password must be at least 6 characters!', 'danger');
                return;
            }
            
            try {
                const response = await fetch('/admin/change-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        currentPassword: data.currentPassword,
                        newPassword: data.newPassword
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showPasswordAlert('Password changed successfully!', 'success');
                    form.reset();
                    setTimeout(() => {
                        bootstrap.Modal.getInstance(document.getElementById('changePasswordModal')).hide();
                    }, 1500);
                } else {
                    showPasswordAlert(result.error || 'Failed to change password', 'danger');
                }
            } catch (error) {
                showPasswordAlert('Network error', 'danger');
            }
        }

        function showPasswordAlert(message, type) {
            const alertContainer = document.getElementById('password-alert');
            alertContainer.innerHTML = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
        }
    </script>
</body>
</html>