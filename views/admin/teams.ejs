<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Team Management - Church Retreat 2025</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .navbar-brand { font-weight: bold; }
        .balance-badge { font-size: 1.1em; }
    </style>
</head>
<body class="bg-light">
    <%- include('../partials/navbar', { user: user }) %>

    <main class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <h2>Team Management</h2>
                <p>Organize teams and assign leaders</p>
                
                <div id="teams-alert"></div>
                
                <div class="row">
                    <% teams.forEach(team => { %>
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0"><%= team.name %></h5>
                                    <span class="badge bg-primary"><%= team.member_count %> members</span>
                                </div>
                                <div class="card-body">
                                    <p><strong>Leader:</strong> <%= team.leader_name || 'No leader assigned' %></p>
                                    
                                    <button class="btn btn-sm btn-outline-primary" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#assignLeaderModal"
                                            onclick="openAssignLeader(<%= team.id %>, '<%= team.name %>')">
                                        <%= team.leader_name ? 'Change Leader' : 'Assign Leader' %>
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>

        <!-- Assign Leader Modal -->
        <div class="modal fade" id="assignLeaderModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="assignLeaderTitle">Assign Team Leader</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="assignLeaderForm">
                            <input type="hidden" id="teamId" name="team_id">
                            <div class="mb-3">
                                <label for="leader_id" class="form-label">Select Team Leader</label>
                                <select class="form-select" id="leader_id" name="leader_id" required>
                                    <option value="">Choose a team member...</option>
                                </select>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" onclick="assignLeader()">Assign Leader</button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentTeamId = null;

        async function openAssignLeader(teamId, teamName) {
            currentTeamId = teamId;
            document.getElementById('teamId').value = teamId;
            document.getElementById('assignLeaderTitle').textContent = `Assign Leader - ${teamName}`;
            
            // Load team members from server
            const select = document.getElementById('leader_id');
            select.innerHTML = '<option value="">Loading team members...</option>';
            
            try {
                const response = await fetch(`/admin/teams/${teamId}/members`);
                const result = await response.json();
                
                select.innerHTML = '<option value="">Choose a team member...</option>';
                
                if (result.members && result.members.length > 0) {
                    result.members.forEach(member => {
                        const option = document.createElement('option');
                        option.value = member.id;
                        option.textContent = `${member.username} (${member.role.replace('_', ' ')})`;
                        select.appendChild(option);
                    });
                } else {
                    select.innerHTML = '<option value="">No team members found</option>';
                }
            } catch (error) {
                console.error('Error loading team members:', error);
                select.innerHTML = '<option value="">Error loading members</option>';
            }
        }

        async function assignLeader() {
            const form = document.getElementById('assignLeaderForm');
            const formData = new FormData(form);
            const data = Object.fromEntries(formData);
            
            try {
                const response = await fetch(`/admin/teams/${currentTeamId}/leader`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                
                const result = await response.json();
                
                if (result.success) {
                    showAlert('Team leader assigned successfully!', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('assignLeaderModal')).hide();
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showAlert(result.error, 'danger');
                }
            } catch (error) {
                showAlert('Network error', 'danger');
            }
        }

        function showAlert(message, type) {
            const alertContainer = document.getElementById('teams-alert');
            alertContainer.innerHTML = `
                <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                    ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            `;
        }

        async function logout() {
            try {
                const response = await fetch('/auth/logout', { method: 'POST' });
                if (response.ok) {
                    window.location.href = '/login';
                }
            } catch (error) {
                console.error('Logout error:', error);
            }
        }
    </script>
</body>
</html>